@using SiFoodProjectFormal2._0.Areas.Users.Models.ViewModels;
@model IEnumerable<StoreVM>
@{
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
}

@section Styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.css">
    <style>
    .selected{
        text-decoration: underline;
    }
    </style>
}
@{
    ViewData["Title"] = "HomePage";
}
<div>



    <div class="container" id="main">
        <section>

            <div class="slider slider-nav responsive row  mx-auto p-3 " style="display:flex;justify-content: space-around">

                <div class="d-flex justify-content-center">
                    <img class="rounded-2" style="width:360px ;height:180px" src="~/assets/images/banner/ad-banner-1.jpg" alt="">
                </div>

                <div class="d-flex justify-content-center">
                    <img class="rounded-2" style="width:360px ;height:180px" src="~/assets/images/banner/ad-banner-2.jpg" alt="">
                </div>
                <div class="d-flex justify-content-center">
                    <img class="rounded-2" style="width:360px ;height:180px" src="~/assets/images/banner/ad-banner-3.jpg" alt="">
                </div>
                <div class="d-flex justify-content-center">
                    <img class="rounded-2" style="width:340px ;height:180px" src="~/assets/images/banner/ad-banner-4.jpg" alt="">
                </div>
                <div class="d-flex justify-content-center">
                    <img class="rounded-2" style="width:340px ;height:180px" src="~/assets/images/banner/ad-banner-5.jpg" alt="">
                </div>
            </div>

        </section>
        <!-- row -->
        <div class="row gx-10">
            <!-- col -->
            <aside class="col-lg-3 col-md-4 mb-6 mb-md-0">
                <div class="offcanvas offcanvas-start offcanvas-collapse w-md-50 " tabindex="-1" id="offcanvasCategory" aria-labelledby="offcanvasCategoryLabel">

                    <div class="offcanvas-header d-lg-none">
                        <h5 class="offcanvas-title" id="offcanvasCategoryLabel">Filter</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                    </div>
                    <div class="offcanvas-body ps-lg-2 pt-lg-0" >
                        <div class="mb-8">
                            <!-- title -->
                            <h5 class="mb-3">依地區探索</h5>
                            <!-- nav -->
                            <ul class="nav nav-category" id="categoryCollapseMenu">
                                <li class="nav-item border-bottom w-100 ">
                                    <a v-on:click="CountArrayinTaipei" class="nav-link collapsed" style="color:#6c757d;font-weight: bold" data-bs-toggle="collapse" data-bs-target="#categoryFlushOne" aria-expanded="false" aria-controls="categoryFlushOne">臺北市<i class="feather-icon icon-chevron-right"></i></a>
                                    <!-- accordion collapse -->
                                    <div id="categoryFlushOne" class="accordion-collapse collapse" data-bs-parent="#categoryCollapseMenu">
                                        <div>
                                            <!-- nav -->
                                            <ul class="nav flex-column ms-3" >
                                                <!-- nav item -->
                                                <li class="nav-item" v-for="area in ArrayinTaipei"><a class="nav-link clickArea" :id="area" v-on:click="filterArea(area)">{{area}}</a></li>

                                            </ul>

                                        </div>
                                    </div>

                                </li>
                                <!-- nav item -->
                                <li class="nav-item border-bottom w-100 ">
                                    <a v-on:click="CountArrayinNewTaipei" class="nav-link collapsed" style="color:#6c757d;font-weight: bold" data-bs-toggle="collapse" data-bs-target="#flush-collapseTwo" aria-expanded="false" aria-controls="flush-collapseTwo">
                                        新北市 <i class="feather-icon icon-chevron-right"></i>
                                    </a>

                                    <!-- collapse -->
                                    <div id="flush-collapseTwo" class="accordion-collapse collapse" data-bs-parent="#categoryCollapseMenu">
                                        <div>
                                            <ul class="nav flex-column ms-3" >
                                                <!-- nav item -->
                                                <li class="nav-item" v-for="area in ArrayinNewTaipei"><a class="nav-link clickArea" :id="area" v-on:click="filterArea(area)">{{area}}</a></li>

                                            </ul>
                                        </div>
                                    </div>

                                </li>


                            </ul>
                        </div>
                        <div class="mb-8">
                            <!-- title -->
                            <h5 class="mb-3">依種類探索</h5>

                            <div class="form-check mb-2" v-for="(condition, index) in selectedConditions" :key="index">
                                <!-- input -->
                                <input class="form-check-input isCheckBox" style="color:#6c757d;border: 2px solid" type="checkbox" value="false" v-model="condition.active">
                                <label class="form-check-label" style="color:#6c757d;font-weight: bold">
                                    {{ condition.label }}
                                </label>
                            </div>
                        </div>
                        <div class="mb-8">

                            <h5 class="mb-3">店家狀態</h5>

                            <!-- form check -->
                            <div class="form-check mb-2">
                                <!-- input -->
                                <input class="form-check-input isCheckBox" style="color:#6c757d;border: 2px solid" type="checkbox" value="false" v-model="isStoreActive">
                                <label class="form-check-label" style="color:#6c757d;font-weight: bold">
                                    營業中
                                </label>
                            </div>
                            <!-- form check -->
                            <div class="form-check mb-2">
                                <!-- input -->
                                <input class="form-check-input isCheckBox" style="color:#6c757d;border: 2px solid" type="checkbox" value="true" v-model="isRemain">
                                <label class="form-check-label" style="color:#6c757d;font-weight: bold">
                                    尚有剩食庫存
                                </label>
                            </div>



                        </div>

                        <div class="mb-8 position-relative">
                            <h5 class="mb-3">探索你的周遭</h5>
                            <!-- Banner Design -->
                            <!-- Banner Content -->
                            <div class="position-absolute p-5 py-8">


                                <a href="#" class="btn btn-dark">GO<i class="feather-icon icon-arrow-right ms-1"></i></a>
                            </div>
                            <!-- Banner Content -->
                            <!-- Banner Image -->
                            <!-- img --><img src="~/images/Users/mapsmall.jpg" class="img-fluid rounded " />
                            <!-- Banner Image -->
                        </div>
                    </div>
                </div>
            </aside>
            <section class="col-lg-9 col-md-12">
                @* v-if="area==true" *@


                <!-- list icon -->
                <div class="d-lg-flex justify-content-between align-items-center">
                    <div class="mb-3 mb-lg-0">
                        <p class="mb-0"> <span class="text-dark">{{storeCount}}</span> Stores found </p>
                    </div>

                </div>

                <!-- row -->
                <div class="row g-4 row-cols-xl-3 row-cols-lg-3 row-cols-2 row-cols-md-2 mt-2">
                    <!--店家showstart-->
                    <!-- col -->
                    <div class="col" v-for="(item,index) in showStores" :key="index">
                        <!-- card -->
                        <div class="card h-100 card-product">

                            <div class="card-body">

                                <!-- badge -->
                                <div class="text-center position-relative ">
                                    <div class=" position-absolute top-0 start-0">
                                        <span class="badge bg-danger">庫存:{{item.inventory}}</span>
                                    </div>
                                    <a href="shop-single.html">
                                        <!-- img --><img :src="item.logoPath" class="mb-3 img-fluid" />
                                    </a>

                                </div>
                                <!-- heading -->
                                <div class=" mb-1">
                                    <a href="#!" class="text-decoration-none text-muted">
                                        <h5>
                                            {{item.storeName}}
                                        </h5>
                                    </a>
                                </div>

                                <div>

                                    <h6 class="text-inherit text-muted ">{{item.description}}</h6>
                                </div>
                                <!-- price -->
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <div>

                                        <small class="text-warning">
                                            <i class="bi bi-star-fill"></i>

                                        </small> <span class="text-muted">{{item.commentRank}} ({{item.commentCount}})</span>

                                    </div>
                                    <!-- btn -->
                                    <div @@click="toggle(item.storeId)">
                                        <button class="btn btn-primary btn-sm" v-if="item.noHeart">
                                            <i class="bi bi-heart"></i> @* 空心 *@

                                        </button>
                                        <button class="btn btn-primary btn-sm" v-else>

                                            <i class="bi bi-heart-fill" style="color: red;"></i> @* 實心 *@
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <!--店家showend-->
                </div>



                <!-- row -->
                <div class="row mt-8">
                    <div class="col">
                        <!-- nav -->
                        <nav>
                            <ul class="pagination">
                                <li class="page-item disabled">
                                    <a class="page-link  mx-1 " href="#" aria-label="Previous">
                                        <i class="feather-icon icon-chevron-left"></i>
                                    </a>
                                </li>
                                <li class="page-item "><a class="page-link  mx-1 active" href="#">1</a></li>
                                <li class="page-item"><a class="page-link mx-1 text-body" href="#">2</a></li>
                                <li class="page-item"><a class="page-link mx-1 text-body" href="#">...</a></li>
                                <li class="page-item"><a class="page-link mx-1 text-body" href="#">12</a></li>
                                <li class="page-item">
                                    <a class="page-link mx-1 text-body" href="#" aria-label="Next">
                                        <i class="feather-icon icon-chevron-right"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </section>
            
        </div>
    </div>

</div>
@section Scripts{@* 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.js"></script> *@
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
    <script>
        var baseAddress = "https://localhost:7042";
        // var isLogin = ('@User.Identity.IsAuthenticated' == "True");
        const storeApp = Vue.createApp({
            data: function () {
                return {
                    isStoreActive: false,
                    isRemain:false,
                    stores: [],
                    storeCount: "",
                    ArrayinTaipei: [],
                    ArrayinNewTaipei: [],
                    selectedConditions: [
                        { label: "生鮮", active: false },
                        { label: "飲料", active: false },
                        { label: "甜點麵包", active: false },
                        { label: "便當", active: false },
                        { label: "素食", active: false },
                        { label: "異國料理", active: false },
                        { label: "其他", active: false }
                    ],
                    isSelected:false,
                }
            },
            computed: {
                showStores: function () {
                    
                    var r = this.filterIsRemaining(this.stores);
                    var f = this.filterAreatoselect(r); //要v-model觸發才會做
                        var a = this.filterActiveTime(f);
                        var c = this.filtercategory(a);
                        this.storeCount = c.length;
                        return c;
                },
            },
            mounted: function () {
                let _this = this;
                _this.getStoreapi();
            },
            watch: {
                // isStoreActive(n) {
                //     if (n == true) { this.area = false; }
                // },
                // condition.active(n) {
                //     if(n == true) { this.area = false; }
                //         }
            },
            methods: {
                filterActiveTime(stores) {
                    if (this.isStoreActive) {
                        
                        let _this = this;
                        var now = new Date();
                        var day = now.getDay();
                        var isWeekday;

                        if (day >= 1 && day <= 5) { isWeekday = true; } else { isWeekday = false; }
                        var localHours = now.getHours();
                        var localMinutes = now.getMinutes();

                        if (isWeekday) {
                            let weekdayopenstores = stores.filter(s => localHours >= parseInt(s.weekdayOpeningTime.slice(0, 2)) && localMinutes >= 0 && localHours < parseInt(s.weekdayClosingTime.slice(0, 2)) && localMinutes >= 0);
                            // _this.showStore = weekdayopenstores.map(x => ({ ...x, opened: true })); //如果未營業呈現灰暗>還沒做
                            return weekdayopenstores;
                        } else {
                            let weekendopenstores = stores.filter(s => localHours >= parseInt(s.weekendOpeningTime.slice(0, 2)) && localMinutes >= 0 && localHours < parseInt(s.weekendClosingTime.slice(0, 2)) && localMinutes >= 0);
                            // _this.showStore = weekendopenstores.map(x => ({ ...x, opened: true }));
                            return weekendopenstores;
                        }
                    }

                    return stores;
                },
                filterArea(area) {

                    var areas = document.querySelectorAll(".clickArea");
                    var getArea = document.getElementById(area);
                    if (getArea.classList.contains("selected")) { getArea.classList.remove("selected"); /* return this.stores; */ }
                    else {
                        areas.forEach(function (a) { a.classList.remove("selected"); });
                        getArea.classList.add("selected");
                        // var area = document.querySelector(".selected");
                        // return this.stores.filter(x => x.region == area.textContent);
                    }
                    
                },
                filterAreatoselect(stores) {
                    var area = document.querySelector(".selected");
                    if (area != null) { return stores.filter(x => x.region == area.textContent); }//要寫到下面的框框才會觸發
                    else { return stores; }
                },
                filterIsRemaining(stores) {
                    if (this.isRemain) {
                        return stores.filter(s => s.inventory > 0);
                    }
                    return stores;
                },

                filtercategory(stores) {
                    
                    var activeConditions = this.selectedConditions.filter(condition => condition.active);
                    if (activeConditions.length === 0) {
                        return stores;
                    }
                    else {
                        return stores.filter(store => {
                            return activeConditions.some(condition => store.categoryName.includes(condition.label));
                        })
                    };
                },
                getStoreapi() {
                    let _this = this;
                    fetch(`${baseAddress}/odata/Storeapi/Main2`, { method: "GET" })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            data.forEach(store => {
                                store.commentRank = store.commentCount > 0 ? store.commentRank / store.commentCount : 0;
                            });
                            _this.stores = data;
                            _this.getFavoriteStore();
                        }).catch(error => {
                            alert(error);
                        });
                },
                getFavoriteStore() {
                    let _this = this;
                    fetch(`${baseAddress}/odata/Storeapi/GetFavoriteStoreId`, { method: "GET" })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            // alert(JSON.stringify(data));
                            //data的指定店家要變紅心
                            _this.stores = _this.stores.map(store => {
                                if (data.includes(store.storeId)) { return { ...store, noHeart: false }; }
                                else { return { ...store, noHeart: true }; }
                            })
                        }).catch(error => { alert(error); });
                },
                toggle(storeId) {
                    let _this = this;
                    for (var i = 0; i < _this.stores.length; i++) {
                        var item = _this.stores[i];
                        if (storeId == _this.stores[i].storeId) {
                            if (item.noHeart == false) { this.deleteFavorite(storeId); item.noHeart = !item.noHeart; }//準備被取消
                            else { this.addToFavorite(storeId); item.noHeart = !item.noHeart; }//準備被收藏
                        }
                    }
                },
                //加入收藏店家
                addToFavorite(storeId) {
                    // let isLogin=
                    let _this = this;
                    // if (!isLogin) return alert("未登入，無法加入收藏!");
                    let favoriteData = {
                        userId: "U001",//暫定>>變數:登入者
                        storeId: storeId,
                    }
                    //如果U001加過，愛心為實心 空心
                    fetch(`${baseAddress}/odata/Storeapi/AddToFavorite`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(favoriteData)
                    }).then(response => {
                        if (response.ok) {
                            alert("商品已加入收藏!");

                        }
                    });
                },
                //取消收藏
                deleteFavorite(storeId) {
                    let _this = this;
                    // if (!isLogin) return alert("未登入，無法加入收藏!");
                    let favoriteCancel = {
                        userId: "U001",//暫定>>變數:登入者
                        storeId: storeId,
                    }
                    //如果U001加過，愛心為實心 空心
                    fetch(`${baseAddress}/odata/Storeapi/DeleteFavorite`, {
                        method: "DELETE",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(favoriteCancel)
                    }).then(response => {
                        if (response.ok) {
                            alert("商品已取消收藏!");

                        }
                    });
                }, 
                CountArrayinTaipei: function () {
                    
                    for (var i = 0; i < this.stores.length; i++) {
                        let area = this.stores[i].region;
                        if (this.stores[i].city == "台北市") { if (!this.ArrayinTaipei.includes(area)) { this.ArrayinTaipei.push(area); } }
                        
                    }
                    return this.ArrayinTaipei;
                },
                CountArrayinNewTaipei: function () {
                    
                    for (var i = 0; i < this.stores.length; i++) {
                        let area = this.stores[i].region;
                   
                        if (this.stores[i].city == "新北市") { if (!this.ArrayinNewTaipei.includes(area)) { this.ArrayinNewTaipei.push(area); } }
                    }
                    return this.ArrayinNewTaipei;
                },


            }
     }).mount("#main");

    </script>
    <script src="~/slickcdn.min.js"></script>
    <script>
        var baseAddress = "https://localhost:7042";

        $('.slider-nav').slick({
            infiinte: true,
            slidesToShow: 3,
            slidesToScroll: 1,
            autoplaySpeed: 3000,
            dots: true,
            arrows: false,
            focusOnSelect: true,
            autoplay: true,
            responsive: [
                {
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: 3,
                        slidesToScroll: 3,
                        infinite: true,
                        dots: true
                    }
                },
                {
                    breakpoint: 600,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 2
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
            ]
        });


    </script>



}
