@{
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "地圖探索";
}
@section Styles{
    <style>
        aside {
            width: 100%;
        }

        #map {
            width: 100%;
            height: 50vh;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        .custom-map-control-button {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            height: 40px;
            cursor: pointer;
        }

            .custom-map-control-button:hover {
                background: rgb(235, 235, 235);
            }
    </style>
}
<section class="container pt-1" id="showMap">

        <div class="container row mapShow">
            <div id="map"></div>
        </div>
        <div class="row">
    <!-- Carousel wrapper -->
    <div id="carouselMultiItemExample" class="carousel slide carousel-dark text-center mt-1" data-mdb-ride="carousel">
        <!-- Controls -->
        <div class="d-flex justify-content-center mb-4">
                <button type="button" class="btn btn-outline-info" @@click="prev">Prev</button>
                <button type="button" class="btn btn-outline-info" @@click="next">Next</button>
        </div>
        <!-- Inner -->
        <div class=" py-1">
            <!-- Single item -->
            <aside v-for="(group, index) in storeGroup" :key="index" class="carousel-item row">
                <div class="container">
                    <div class="row">
                        <!-- Image on Top -->
                        <div class="card col-4 border border-success" v-for="item in group">
                          <div class="row">
                            <div class="col-6">
                                   <img :src="item.logoPath" class="card-img-top img-fluid" />
                            </div>
                                    <div class="card-body col-6 align-content-between ">
                                <h5 class="card-title text-primary">{{item.storeName}}</h5>
                                <p class="card-text text-body">
                                    {{item.description}}
                                </p>
                                        <p class="card-text">
                                    <div class="d-flex align-items-center align-bottom mt-3">
                                        <div>
                                            <small class="text-warning">
                                                <i class="bi bi-star-fill"></i>
                                            </small> <span class="text-muted">{{item.commentRank}} ({{item.commentCount}})</span>
                                        </div>
                                    </div>
                                </p>
                            </div>
                           </div>
                        </div>
                    </div>
                </div>
            </aside>
        </div>
        <!-- Inner -->
    </div>
    <!-- Carousel wrapper -->
    </div>
</section>

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAN9KFcDFxucoV9IglJyqQSd_d1GLWHiYI" async defer></script>
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
    <script>
        var baseAddress = "https://localhost:7042";
        var StoreMap = Vue.createApp({
            data: function () {
                return {
                    storeData: [],
                    map: null,
                    infowindow: null,
                    current: null,
                    filteredLocations: [],
                }
            },
            computed:{
                storeGroup() {
                    var itemCount = 3;
                    var store=[];
                    for (let i = 0; i < this.filteredLocations.length; i += itemCount) {
                        store.push(this.filteredLocations.slice(i, i + itemCount));
                    }
                    console.log(store);
                    return store;
                }
            
            },
            mounted: function () {
                this.getLocation();
                this.getStoreOnMapApi();
                window.addEventListener('load', () => {
                    this.initMap();
                });
            },
            methods: {
                prev() {
                
                
                },
                next() { },
                createPoint(lat, lng, storeName) {
                    // console.log(lat, lng);
                    let m = new google.maps.Marker({
                        position: {
                            lat: lat, // 經度
                            lng: lng // 緯度
                        },
                        map: this.map
                    });
                    let infowindow = new google.maps.InfoWindow({
                        content: `<h6>${storeName}</h6>` // 支援html
                    });
                    // 監聽 marker click 事件
                    m.addListener('click', e => {
                        infowindow.open(this.map, m);

                    });
                    // console.log(m);
                },
                getLocation() {
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(this.showPosition);
                    }
                    else {
                        alert("不支持你的地理位置。");
                    }
                },
                showPosition(position) {
                    this.current = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    }
                },
                initMap() {
                    let location = {
                        lat: 25.0374865, // 經度
                        lng: 121.5647688 // 緯度
                    };
                    this.map = new google.maps.Map(document.getElementById('map'), {
                        center: this.current == null ? location : this.current,
                        zoom: 16,
                        mapTypeId: 'terrain'
                    });
                    let currentLocation = new google.maps.Marker({
                        position: this.current == null ? location : this.current,
                        icon: "https://img.onl/195tB0",
                        map: this.map
                    });
                    google.maps.event.addListener(this.map, 'idle', this.updateStores);
                },
                updateStores() {
                    let bounds = this.map.getBounds();
                    let NorthEast = bounds.getNorthEast();
                    let SouthWest = bounds.getSouthWest();

                    this.filteredLocations = this.storeData.filter(location => {
                        return (
                            location.latitude >= SouthWest.lat() &&
                            location.latitude <= NorthEast.lat() &&
                            location.longitude >= SouthWest.lng() &&
                            location.longitude <= NorthEast.lng()
                        );
                    });
                },
                getStoreOnMapApi: function () {
                    fetch(`${baseAddress}/api/Storeapi/FilterInMap`, { method: "GET" })
                        .then(response => response.json())
                        .then(data => {
                            this.storeData = data;
                            this.storeData.forEach(x => {
                                x.commentRank = x.commentCount > 0 ? x.commentRank / x.commentCount : 0;
                                this.createPoint(x.latitude, x.longitude, x.storeName);
                            });

                        })
                        .catch(error => {
                            alert(error);
                        })
                },
            },
        }).mount("#showMap")
    </script>
}
