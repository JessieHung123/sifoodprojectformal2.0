@{
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "地圖探索";
}
@section Styles{
    <style>
        #map {
            width: 100%;
            height: 75%;
        }
        /** Optional: Makes the sample page fill the window.*/
        html,
        body {
            height: 100%;
            margin: 0;
            padding: 0;
        }

        .custom-map-control-button {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            height: 40px;
            cursor: pointer;
        }

            .custom-map-control-button:hover {
                background: rgb(235, 235, 235);
            }
    </style>
}
<section class="container" id="showMap">
    <div class="container p-5 row">

        <!-- col -->
        <aside class="col-lg-3 col-md-4 ">
            <div class="offcanvas offcanvas-start offcanvas-collapse w-md-50 " tabindex="-1" id="offcanvasCategory" aria-labelledby="offcanvasCategoryLabel">

                <div class="offcanvas-header d-lg-none">
                    <h5 class="offcanvas-title" id="offcanvasCategoryLabel">Filter</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body ps-lg-2 pt-lg-0">
                    <div class="mb-8">
                        <!-- title -->
                        <h5 class="mb-3">依地區探索</h5>
                        <!-- Image on Top -->
                        <div class="card" v-for="item in storeData">
                            <img src="../assets/images/blog/blog-img-1.jpg" class="card-img-top" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">Card title</h5>
                                <p class="card-text">
                                    {{item.storeName}}
                                </p>
                                <p class="card-text">
                                    <small class="text-muted">
                                        {{item.description}}
                                    </small>
                                </p>
                            </div>
                        </div>
                    </div>
                   
                </div>
            </div>
        </aside>
        <div class="col-lg-9 col-md12 mb-6 mb-md-0">
            <div id="map" style="height:800px"></div>
        </div>
    </div>

</section>

@section Scripts{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAN9KFcDFxucoV9IglJyqQSd_d1GLWHiYI" async defer></script>
    <script src="https://unpkg.com/vue@3.2.36/dist/vue.global.js"></script>
    <script>
        var baseAddress = "https://localhost:7042";
        var StoreMap = Vue.createApp({
            data: function () {
                return {
                    storeData: [],
                    map:null,
                    infowindow:null,
                }
            },
            mounted: function () {
                
                this.getStoreOnMapApi();
                
                window.addEventListener('load', () => {
                    this.initMap();
                });

               
            },
            methods: {
                createPoint(lat,lng,storeName) {
                    // console.log(lat, lng);
                    let m = new google.maps.Marker({
                        position: {
                            lat: lat, // 經度
                            lng: lng // 緯度
                        },
                        icon: "https://akveo.github.io/eva-icons/outline/png/128/gift-outline.png",
                        map: this.map
                    });
                    let infowindow = new google.maps.InfoWindow({
                        content: `<h6>${storeName}</h6>` // 支援html
                    });

                    // 監聽 marker click 事件
                    m.addListener('click', e => {
                        infowindow.open(this.map, m);
                    });
                    console.log(m);
                },                
                selectStore(item) { 

               
                },
                initMap() {
                    // 先確認使用者裝置能不能抓地點
                    if (navigator.geolocation) {

                        // 使用者不提供權限，或是發生其它錯誤
                        function error() {
                            alert('無法取得你的位置');
                        }

                        // 使用者允許抓目前位置，回傳經緯度
                        function success(position) {
                            this.map = new google.maps.Map(document.getElementById('map'), {
                                // center: this.currentlocation,
                                center: {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude
                                },
                                zoom: 16,
                                mapTypeId: 'terrain'
                            });
                            let marker = new google.maps.Marker({
                                position: {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude
                                },
                                // icon:require('@@/images/Users/locationnow.png'), // 自定義圖標，google也有提供5個預設的圖標，參考下方*1
                                map: this.map
                            });


                        }
                        // 跟使用者拿所在位置的權限
                        navigator.geolocation.getCurrentPosition(success, error);

                    } else {
                        alert('Sorry, 你的裝置不支援地理位置功能。')
                    }
                },
                getStoreOnMapApi: function () {
                    fetch(`${baseAddress}/api/Storeapi/FilterInMap`, { method: "GET" })
                        .then(response => response.json())
                        .then(data => {
                            this.storeData = data;
                            this.storeData.forEach(x => { 
                                this.createPoint(x.latitude, x.longitude,x.storeName);
                            });
                            
                        })
                        .catch(error => {
                            alert(error);
                        })
                },
            },
        }).mount("#showMap")
    </script>
}
