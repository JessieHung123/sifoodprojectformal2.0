@using SiFoodProjectFormal2._0.Areas.Users.Models.ViewModels
@model IEnumerable<HistoryOrderVM>

@{
    Layout = "~/Areas/Users/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "歷史訂單";
}

<!-- CSS -->
@section Styles{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <!--改放大鏡和X顯示問題-->
    <style>
        .input-group-append .btn {
            margin-left: 2px; /* 增加按鈕間的間隔 */
        }

        .input-group .form-control {
            padding-right: 2.5rem; /* 確保輸入框內有足夠的空間 */
        }
    </style>
    }


<!-- Main -->

<section>
    <div id="historyApp">
        <div class="container">
            <div class="row">
                <!--左側Side bar PartialView-->
                <partial name="_MembershipPartial"></partial>

                <!--Title-->
                <div class="col-lg-9 col-md-8 col-12">
                    <div class="py-6 p-md-6 p-lg-10">
                        <h2 class="mb-6">我的訂單</h2>
                        <div id="error-message" style="color: red; display: none;"></div>

                        <!-- 加入filter 搜索和篩選 -->
                        <div class="row">
                            <div class="col-12">
                                <div class="d-lg-flex justify-content-between align-items-center">
                                    <div class="mb-3 mb-lg-0">
                                        <p class="mb-0">共 <span class="text-dark">{{ totalOrdersCount }} </span> 筆</p>
                                    </div>

                                    <!-- text搜索框-->
                                    <div class="col-xxl-4 col-lg-4 d-none d-lg-block">
                                        <div class="input-group">
                                            <input class="form-control rounded" v-model="searchTerm" type="text" placeholder="Search for products">
                                            <span class="input-group-append">
                                                <button class="btn bg-white" v-on:click="searchOrders">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                                                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.414-1.415l-3.85-3.85a1.002 1.002 0 0 0-.114-.098zM13 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                                                    </svg>
                                                </button>
                                                <button class="btn bg-white" v-on:click="clearSearch" v-show="searchTerm">
                                                    X
                                                </button>
                                            </span>
                                        </div>
                                    </div>

                                    <!-- 顯示筆數選擇 -->
                                    <div class="form-group">
                                        <select class="form-select" v-model="pageSize" v-on:change="loadOrders">
                                            <option value="" selected>顯示筆數</option>
                                            <option value="5">顯示: 5</option>
                                            <option value="10">顯示:10</option>
                                            <option value="20">顯示:20</option>
                                            <option value="30">顯示:30</option>
                                        </select>
                                    </div>

                                    <!-- Sort顯示 -->
                                    <div class="form-group">
                                        <select class="form-select" v-model="sortOption" v-on:change="loadOrders">
                                            <option value="=">排序</option>
                                            <option value="Status">訂單狀態</option>
                                            <option value="Low to High">金額：由低到高</option>
                                            <option value="High to Low">金額: 由高到低</option>
                                            <option value="Newest">訂購日期：由新到舊</option>
                                            <option value="Oldest">訂購日期：由舊到新</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mt-10 table-responsive-xxl border-0">
                            <table class="table mb-0 text-nowrap table-centered">
                                <thead class="bg-light">
                                    <tr>
                                        <th>明細|評論</th>
                                        <th>&nbsp;</th>
                                        <th>商品</th>
                                        <th>訂單編號</th>
                                        <th>訂購日期</th>
                                        <th>件數</th>
                                        <th>訂單狀態</th>
                                        <th>金額</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="order in orders" :key="order.OrderId">
                                        <td>
                                            <button v-on:click="loadOrderDetails(order.OrderId)" class="btn btn-primary">查看詳情</button>
                                        </td>
                                        <td>
                                            <img :src="order.FirstProductPhotoPath" alt="Product" class="icon-shape icon-xl">
                                        </td>
                                        <td>{{ order.FirstProductName }}</td>
                                        <td>{{ order.OrderId }}</td>
                                        <td>{{ order.OrderDate }}</td>
                                        <td>{{ order.Quantity }}</td>
                                        <td>
                                            <span :class="getStatusClass(order.Status)">{{ order.Status }}</span>
                                        </td>
                                        <td>$ {{ order.TotalPrice }}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <!--分頁-->
                        <div class="border-top d-md-flex justify-content-between align-items-center p-6">
                            <nav aria-label="Page navigation">
                                <ul class="pagination">
                                    <li class="page-item" :class="{ 'disabled': currentPage === 1 }">
                                        <a class="page-link" href="#" v-on:click="changePage(currentPage - 1)">Previous</a>
                                    </li>
                                    <li v-for="page in totalPages" :key="page" class="page-item" :class="{ 'active': currentPage === page }">
                                        <a class="page-link" href="#" v-on:click="changePage(page)">{{ page }}</a>
                                    </li>
                                    <li class="page-item" :class="{ 'disabled': currentPage === totalPages }">
                                        <a class="page-link" href="#" v-on:click="changePage(currentPage + 1)">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts{

    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>     <script src="https://unpkg.com/vuejs-paginate-next@latest/dist/vuejs-paginate-next.umd.js"></script>

    <!--星星評分-->
    <script src="/js/rating.js"></script>

    <!-- Theme JS -->
    <!--原生-->
    @*  <script>
        // 用於保存當前訂單的ID
        var currentOrderId;

        document.addEventListener('DOMContentLoaded', function () {
            // Text 搜索
            var searchInput = document.getElementById('searchInput');
            var clearButton = document.getElementById('clearButton');
            if (searchInput && clearButton) {
                searchInput.addEventListener('input', function () {
                    clearButton.style.display = this.value.length > 0 ? 'inline-block' : 'none';
                });
            }

            // 清除搜索
            window.clearSearch = function () {
                if (searchInput) {
                    searchInput.value = '';
                    searchInput.dispatchEvent(new Event('input'));
                }
                var searchForm = document.getElementById('searchForm');
                if (searchForm) {
                    searchForm.submit();
                }
            };

            // 顯示筆數下拉選單
            var pageSizeSelect = document.getElementById('pageSizeSelect');
            if (pageSizeSelect) {
                pageSizeSelect.addEventListener('change', function () {
                    this.form.submit();
                });
            }

            // 排序
            var sortSelect = document.getElementById('sortSelect');
            if (sortSelect) {
                sortSelect.addEventListener('change', function () {
                    var selectedValue = this.value;
                    var currentUrl = new URL(window.location);
                    currentUrl.searchParams.set('sortOption', selectedValue);
                    window.location.href = currentUrl.href;
                });
            }

            //嘗試清除Modal殘餘遮罩
            function clearModalsBackdrop() {
                var backdrops = document.querySelectorAll('.modal-backdrop');
                backdrops.forEach(function (backdrop) {
                    backdrop.remove();
                });
            }

            // 處理 Modal for Orderdetail
            window.loadOrderDetails = function (orderId) {

                // 保存當前訂單ID
                currentOrderId = orderId;

                //偵錯:查orderID
                console.log("載入訂單詳情，訂單 ID:", orderId);

                // 構建正確的Modal ID
                var modalId = 'exampleModalScrollable-' + orderId;

                //偵錯:查modalId
                console.log("Modal框 ID:", modalId);

                // 獲取模態框元素
                var modalElement = document.getElementById(modalId);

                // 使用 Fetch API 向後端發送請求
                fetch('@Url.Action("GetOrderDetails", "Member")?orderId=' + orderId)
                    .then(response => response.text())
                    .then(response => {

                        // 確保Modal元素存在
                        if (modalElement) {

                            // 將返回的視圖填充到Modal中
                            modalElement.querySelector('.modal-content').innerHTML = response;

                            // 初始化並顯示Modal
                            var myModal = new bootstrap.Modal(modalElement);
                            myModal.show();

                            // 添加 hidden.bs.modal 事件監聽器
                            modalElement.addEventListener('hidden.bs.modal', function () {
                                clearModalsBackdrop();
                            });

                            // 在Modal內容加載後初始化星級評分系統
                            initializeStarRatingSystem(modalElement);
                        }
                    })
                    .catch(err => {
                        // 處理錯誤情況
                        console.error("Modal又發生錯誤了: ", err);
                    });
            };

            // 定義一個變量來保存Closure
            var getRatingValue;

            // 新增的初始化星級評分系統函數
            function initializeStarRatingSystem(modalElement) {
                const stars = modalElement.querySelector(".rating")?.children;
                let ratingValue;

                // 目前選到的星星
                let index;

                if (stars) {
                    document.getElementById("rating-value").innerHTML = "請給分";

                    for (let i = 0; i < stars.length; i++) {
                        // 設置鼠標懸停在星星上時的事件
                        stars[i].addEventListener("mouseover", function () {
                            document.getElementById("rating-value").innerHTML = "正在打分數";
                            for (let j = 0; j < stars.length; j++) {
                                // reset 所有星星
                                stars[j].classList.remove("fa-star");
                                stars[j].classList.add("fa-star-o");
                            }
                            for (let j = 0; j <= i; j++) {
                                // 移除空心的星星
                                stars[j].classList.remove("fa-star-o");
                                // 添加新的星星
                                stars[j].classList.add("fa-star");
                            }
                        });

                        // 設置點擊星星時的事件
                        stars[i].addEventListener("click", function () {
                            ratingValue = i + 1;
                            index = i;
                            document.getElementById("rating-value").innerHTML = "你打的分數是 " + ratingValue;
                        });

                        // 設置滑鼠移開星星時的事件
                        stars[i].addEventListener("mouseout", function () {
                            for (let j = 0; j < stars.length; j++) {
                                // reset 所有星星
                                stars[j].classList.remove("fa-star");
                                stars[j].classList.add("fa-star-o");
                            }
                            for (let j = 0; j <= index; j++) {
                                stars[j].classList.remove("fa-star-o");
                                stars[j].classList.add("fa-star");
                            }
                        });
                    }

                    // 創建一個Closure來返回評分值
                    getRatingValue = function () {
                        return ratingValue;
                    };

                } else {
                    console.error("無法找到 .rating 元素");
                }
            }


            // 處理評價提交
            window.submitRating = function () {
                // 直接使用Closure或取評分值
                var rating = getRatingValue ? getRatingValue() : 0;
                var comment = document.querySelector("#commentContent").value;

                // 使用 Fetch API 發送 POST 請求
                fetch('@Url.Action("SubmitRating", "Member")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: 'orderId=' + currentOrderId + '&rating=' + rating + '&comment=' + comment
                })
                    .then(response => response.json())
                    .then(data => {
                        // 處理成功提交後的邏輯
                        alert("評價提交成功");

                        // 關閉Modal
                        $('#exampleModalScrollable-' + currentOrderId).modal('hide');
                    })
                    .catch(err => {
                        alert("發生錯誤: " + err);
                    });
            };


            // 綁定 loadOrderDetails 事件
            var elements = document.querySelectorAll('[data-order-id]');
            elements.forEach(function (element) {
                element.addEventListener('click', function () {
                    var orderId = this.getAttribute('data-order-id');
                    loadOrderDetails(orderId);
                });
            });
        });
    </script> *@

    <!--Vue-->
    <script>
        const historyApp = Vue.createApp({
            data() {
                return {
                    // 訂單列表相關數據
                    orders: [],
                    searchTerm: '',
                    sortOption: '',
                    totalOrdersCount: 0,
                    pageSize: 10,
                    currentPage: 1,
                    totalPages: 10, // 假設總頁數是 10

                    // Modal 和評分相關數據
                    currentOrderDetail: null,
                    currentRating: 0,
                    hoverRating: 0,
                    comment: '',
                };
            },
            mounted() {
                this.loadOrders(); // 加載訂單列表
            },
            methods: {
                // 分頁方法
                changePage(page) {
                    if (page < 1 || page > this.totalPages) {
                        return;
                    }
                    this.currentPage = page;
                    this.loadOrders();
                },
                // 從後端加載訂單列表
                loadOrders() {
                    fetch(`/Users/Member/HistoryOrders`)
                        .then(response => response.json())
                        .then(data => {
                            this.orders = data.orders;
                            this.totalOrdersCount = data.totalCount;
                            this.totalPages = Math.ceil(this.totalOrdersCount / this.pageSize);
                        })
                        .catch(err => alert(err));
                },
                // 從後端加載特定訂單的詳情
                loadOrderDetails(orderId) {
                    fetch(`/Users/Member/GetOrderDetails?orderId=${orderId}`)
                        .then(response => response.json())
                        .then(data => {
                            this.currentOrderDetail = data;
                        })
                        .catch(err => console.error(err));
                },
                // 提交評價數據到後端
                submitRating() {
                    fetch('/Users/Member/SubmitRating', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            orderId: this.currentOrderDetail.OrderId,
                            rating: this.currentRating,
                            comment: this.comment,
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            alert("評價提交成功");
                            // 重置數據或進行其他操作
                        })
                        .catch(err => console.error("提交評價出錯: ", err));
                },
                // 根據訂單狀態返回對應的 CSS 類別
                getStatusClass(status) {
                    switch (status) {
                        case "已送達":
                            return "badge bg-light-info text-dark-info";
                        case "已領取":
                            return "badge bg-light-danger text-dark-danger";
                        case "已取消":
                            return "badge bg-light text-dark";
                        case "待確認":
                            return "badge bg-warning text-dark";
                        case "待配送":
                            return "badge bg-info text-dark";
                        case "待領取":
                            return "badge bg-secondary";
                        case "配送中":
                            return "badge bg-primary";
                        default:
                            return "badge bg-secondary"; // 預設情況
                    }
                },
                // 新增的搜索和清除搜索方法
                searchOrders() {
                    this.currentPage = 1; // 重置為第一頁
                    this.loadOrders(); // 重新加載訂單
                },
                clearSearch() {
                    this.searchTerm = ''; // 清空搜索詞
                    this.loadOrders(); // 重新加載訂單
                },
            },
        }).mount('#historyApp');
    </script>



}



